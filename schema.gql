# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Cat {
  age: Int
  breed: String
  createdAt: DateTime
  id: Int!
  name: String
  updatedAt: DateTime
}

input CatOrderByWithRelationInput {
  age: SortOrderInput
  breed: SortOrderInput
  createdAt: SortOrderInput
  id: SortOrder
  name: SortOrderInput
  updatedAt: SortOrderInput
}

enum CatScalarFieldEnum {
  age
  breed
  createdAt
  id
  name
  updatedAt
}

input CatWhereInput {
  AND: [CatWhereInput!]
  NOT: [CatWhereInput!]
  OR: [CatWhereInput!]
  age: IntNullableFilter
  breed: StringNullableFilter
  createdAt: DateTimeNullableFilter
  id: IntFilter
  name: StringNullableFilter
  updatedAt: DateTimeNullableFilter
}

input CatWhereUniqueInput {
  AND: [CatWhereInput!]
  NOT: [CatWhereInput!]
  OR: [CatWhereInput!]
  age: IntNullableFilter
  breed: StringNullableFilter
  createdAt: DateTimeNullableFilter
  id: Int
  name: StringNullableFilter
  updatedAt: DateTimeNullableFilter
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

input DateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input IntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

input NestedDateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedIntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

enum NullsOrder {
  first
  last
}

type Query {
  cat(where: CatWhereUniqueInput!): Cat
  cats(cursor: CatWhereUniqueInput, distinct: [CatScalarFieldEnum!], orderBy: [CatOrderByWithRelationInput!], skip: Int, take: Int, where: CatWhereInput): [Cat!]!
  findFirstCat(cursor: CatWhereUniqueInput, distinct: [CatScalarFieldEnum!], orderBy: [CatOrderByWithRelationInput!], skip: Int, take: Int, where: CatWhereInput): Cat
}

enum SortOrder {
  asc
  desc
}

input SortOrderInput {
  nulls: NullsOrder
  sort: SortOrder!
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}